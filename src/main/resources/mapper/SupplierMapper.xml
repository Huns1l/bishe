<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.api_project.mapper.SupplierMapper">

    <resultMap type="com.example.api_project.pojo.Supplier" id="SupplierMap">
        <result property="supplierKey" column="supplier_key" jdbcType="VARCHAR"/>
        <result property="supplierName" column="supplier_name" jdbcType="VARCHAR"/>
        <result property="supplierCode" column="supplier_code" jdbcType="VARCHAR"/>
        <result property="categoryKey" column="category_key" jdbcType="VARCHAR"/>
        <result property="superlierDescription" column="superlier_description" jdbcType="VARCHAR"/>

        <association property="categoryName" javaType="String"
                     column="{categoryKey=category_key}"
                     select="com.example.api_project.mapper.CategoryMapper.queryNameById">
        </association>
    </resultMap>

    <!--查询全部-->
    <select id="getList" resultMap="SupplierMap">
        select supplier_key,
               supplier_name,
               supplier_code,
               category_key,
               superlier_description
        from supplier
        order by supplier_name
    </select>

    <select id="getListCategory" resultMap="SupplierMap">
        select supplier_key,
               supplier_name,
               supplier_code,
               category_key,
               superlier_description
        from supplier
        where  category_key = #{categoryKey}
        order by supplier_name
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="SupplierMap">
        select supplier_key,
               supplier_name,
               supplier_code,
               category_key,
               superlier_description
        from supplier
        where supplier_key = #{supplierKey}
    </select>

    <!--查询供应商名单个-->
    <select id="queryNameById" resultType="String">
        select
            supplier_name
        from supplier
        where supplier_key = #{supplierKey}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="SupplierMap">
        select supplier.*, category.category_name
        from supplier join category on supplier.category_key = category.category_key
        <where>
            <if test="supplierName != null and supplierName != ''">
                and supplier_name like concat('%', #{supplierName}, '%')
            </if>
            <if test="supplierCode != null and supplierCode != ''">
                and supplier_code like concat('%', #{supplierCode}, '%')
            </if>
            <if test="categoryKey != null and categoryKey != ''">
                and supplier.category_key = #{categoryKey}
            </if>
        </where>
        order by supplier_name
        limit #{startRows,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from supplier join category on supplier.category_key = category.category_key
        <where>
            <if test="supplierName != null and supplierName != ''">
                and supplier_name like concat('%', #{supplierName}, '%')
            </if>
            <if test="supplierCode != null and supplierCode != ''">
                and supplier_code like concat('%', #{supplierCode}, '%')
            </if>
            <if test="categoryKey != null and categoryKey != ''">
                and supplier.category_key = #{categoryKey}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="supplierKey" useGeneratedKeys="true">
        insert into supplier(supplier_key,supplier_name, supplier_code, category_key, superlier_description)
        values (#{supplierKey},#{supplierName}, #{supplierCode}, #{categoryKey}, #{superlierDescription})
    </insert>

    <insert id="insertBatch" keyProperty="supplierKey" useGeneratedKeys="true">
        insert into supplier(supplier_name, supplier_code, category_key, superlier_description)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.supplierName}, #{entity.supplierCode}, #{entity.categoryKey}, #{entity.superlierDescription})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="supplierKey" useGeneratedKeys="true">
        insert into supplier(supplier_name, supplier_code, category_key, superlier_description)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.supplierName}, #{entity.supplierCode}, #{entity.categoryKey}, #{entity.superlierDescription})
        </foreach>
        on duplicate key update
        supplier_name = values(supplier_name),
        supplier_code = values(supplier_code),
        category_key = values(category_key),
        superlier_description = values(superlier_description)
    </insert>

    <!--删除分类时，将该分类下的数据设置为暂未分类 -->
    <update id="setNoCategory">
        update supplier
        set category_key = #{categoryKey}
        where supplier_key = #{supplierKey}
    </update>

    <!--通过主键修改数据-->
    <update id="update">
        update supplier
        <set>
            <if test="supplierName != null and supplierName != ''">
                supplier_name = #{supplierName},
            </if>
            <if test="supplierCode != null and supplierCode != ''">
                supplier_code = #{supplierCode},
            </if>
            <if test="categoryKey != null and categoryKey != ''">
                category_key = #{categoryKey},
            </if>
                superlier_description = #{superlierDescription},
        </set>
        where supplier_key = #{supplierKey}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from supplier
        where supplier_key = #{supplierKey}
    </delete>

</mapper>

